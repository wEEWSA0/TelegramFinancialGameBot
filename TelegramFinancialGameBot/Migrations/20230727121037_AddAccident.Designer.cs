// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TelegramFinancialGameBot.Data;

#nullable disable

namespace TelegramFinancialGameBot.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230727121037_AddAccident")]
    partial class AddAccident
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TelegramFinancialGameBot.Model.Accident", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("CashExpense")
                        .HasColumnType("integer");

                    b.Property<int>("Cost")
                        .HasColumnType("integer");

                    b.Property<short>("EnergyCost")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("StepsDuration")
                        .HasColumnType("smallint");

                    b.Property<short>("TimeExpense")
                        .HasColumnType("smallint");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("Type");

                    b.HasKey("Id");

                    b.ToTable("Accidents");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.Account", b =>
                {
                    b.Property<long>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ChatId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isLink")
                        .HasColumnType("boolean");

                    b.HasKey("ChatId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.Buisness", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("CashExpense")
                        .HasColumnType("integer");

                    b.Property<int>("CashIncome")
                        .HasColumnType("integer");

                    b.Property<int>("Cost")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("RequireTime")
                        .HasColumnType("smallint");

                    b.Property<short>("VariableExpenses")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Buisnesses");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.BuisnessManagerStaff", b =>
                {
                    b.Property<int>("UserBuisnessId")
                        .HasColumnType("integer");

                    b.Property<string>("ManagerStaffId")
                        .HasColumnType("text");

                    b.HasKey("UserBuisnessId", "ManagerStaffId");

                    b.HasIndex("ManagerStaffId");

                    b.ToTable("BuisnessManagerStaffs");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.BuisnessRegionalDirector", b =>
                {
                    b.Property<int>("UserBuisnessId")
                        .HasColumnType("integer");

                    b.Property<string>("RegionalDirectorId")
                        .HasColumnType("text");

                    b.HasKey("UserBuisnessId", "RegionalDirectorId");

                    b.HasIndex("RegionalDirectorId");

                    b.ToTable("BuisnessRegionalDirectors");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.Dream", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("CashExpense")
                        .HasColumnType("integer");

                    b.Property<int>("Cost")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("RequireTime")
                        .HasColumnType("smallint");

                    b.Property<short>("StepCount")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Dreams");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.FinancialDirector", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("CashExpense")
                        .HasColumnType("integer");

                    b.Property<short>("CashIncomePercent")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("TimeIncome")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("FinancialDirectors");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.GeneralDirector", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("CashExpense")
                        .HasColumnType("integer");

                    b.Property<short>("CashIncomePercent")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("TimeIncome")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("GeneralDirectors");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.Knowledge", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("CashExpense")
                        .HasColumnType("integer");

                    b.Property<int>("Cost")
                        .HasColumnType("integer");

                    b.Property<short>("LearningTime")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("RequireTime")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Knowledges");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.KnowledgeForWork", b =>
                {
                    b.Property<string>("KnowledgeId")
                        .HasColumnType("text");

                    b.Property<string>("WorkId")
                        .HasColumnType("text");

                    b.HasKey("KnowledgeId", "WorkId");

                    b.HasIndex("WorkId");

                    b.ToTable("KnowledgeForWork");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.ManagerStaff", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("CashExpense")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("TimeIncome")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("ManagerStaffs");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.Property", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("CashExpense")
                        .HasColumnType("integer");

                    b.Property<int>("Cost")
                        .HasColumnType("integer");

                    b.Property<short>("EnergyCost")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RentCashIncome")
                        .HasColumnType("integer");

                    b.Property<short>("TimeExpense")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.RegionalDirector", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("CashExpense")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("TimeIncome")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("RegionalDirectors");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("OwnerChatId")
                        .HasColumnType("bigint");

                    b.Property<short>("Step")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.SetupCharacter", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("Cash")
                        .HasColumnType("integer");

                    b.Property<int>("FreeTime")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SetupCharacters");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.SetupCharacterCards", b =>
                {
                    b.Property<string>("SetupCharacterId")
                        .HasColumnType("text");

                    b.Property<string>("Card")
                        .HasColumnType("text");

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("text");

                    b.HasKey("SetupCharacterId", "Card");

                    b.ToTable("SetupCharacterCards");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.Staff", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("CashExpense")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("TimeIncome")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("AccountChatId")
                        .HasColumnType("bigint");

                    b.Property<int>("Cash")
                        .HasColumnType("integer");

                    b.Property<int>("CashIncome")
                        .HasColumnType("integer");

                    b.Property<bool>("CompleteDream")
                        .HasColumnType("boolean");

                    b.Property<string>("DreamId")
                        .HasColumnType("text");

                    b.Property<short>("Energy")
                        .HasColumnType("smallint");

                    b.Property<bool>("FinishedStep")
                        .HasColumnType("boolean");

                    b.Property<int>("FreeTime")
                        .HasColumnType("integer");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DreamId");

                    b.HasIndex("RoomId");

                    b.HasIndex("AccountChatId", "RoomId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.UserBuisness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<short>("BranchCount")
                        .HasColumnType("smallint");

                    b.Property<string>("BuisnessId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FinancialDirectorId")
                        .HasColumnType("text");

                    b.Property<string>("GeneralDirectorId")
                        .HasColumnType("text");

                    b.Property<short>("OpenSteps")
                        .HasColumnType("smallint");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BuisnessId");

                    b.HasIndex("FinancialDirectorId");

                    b.HasIndex("GeneralDirectorId");

                    b.HasIndex("UserId", "BuisnessId")
                        .IsUnique();

                    b.ToTable("UserBuisnesses");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.UserDreamExpectation", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("DreamId")
                        .HasColumnType("text");

                    b.Property<short>("Steps")
                        .HasColumnType("smallint");

                    b.HasKey("UserId", "DreamId");

                    b.HasIndex("DreamId");

                    b.ToTable("UserDreamExpectations");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.UserKnowledge", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("KnowledgeId")
                        .HasColumnType("text");

                    b.Property<short>("Experience")
                        .HasColumnType("smallint");

                    b.Property<short>("TimeToLearn")
                        .HasColumnType("smallint");

                    b.HasKey("UserId", "KnowledgeId");

                    b.HasIndex("KnowledgeId");

                    b.ToTable("UserKnowledges");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.UserProperty", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("PropertyId")
                        .HasColumnType("text");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("boolean");

                    b.Property<bool>("UsesAsHome")
                        .HasColumnType("boolean");

                    b.HasKey("UserId", "PropertyId");

                    b.HasIndex("PropertyId");

                    b.ToTable("UserProperties");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.UserStaff", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("StaffId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "StaffId");

                    b.HasIndex("StaffId");

                    b.ToTable("UserStaffs");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.UserWorkPosition", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("WorkPositionWorkId")
                        .HasColumnType("text");

                    b.Property<short>("Experience")
                        .HasColumnType("smallint");

                    b.Property<short>("WorkPositionExpirienceRequire")
                        .HasColumnType("smallint");

                    b.Property<string>("WorkPositionWorkId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId", "WorkPositionWorkId");

                    b.HasIndex("WorkPositionWorkId", "WorkPositionExpirienceRequire");

                    b.ToTable("UserWorkPositions");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.VictoryConditions", b =>
                {
                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<int>("CashIncome")
                        .HasColumnType("integer");

                    b.Property<short>("RequireTime")
                        .HasColumnType("smallint");

                    b.Property<bool>("ShouldDreamBeCompleted")
                        .HasColumnType("boolean");

                    b.Property<short>("TimeForPaymentsToBank")
                        .HasColumnType("smallint");

                    b.HasKey("RoomId");

                    b.ToTable("VictoryConditions");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.Work", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.WorkPosition", b =>
                {
                    b.Property<string>("WorkId")
                        .HasColumnType("text");

                    b.Property<short>("ExpirienceRequire")
                        .HasColumnType("smallint");

                    b.Property<int>("Income")
                        .HasColumnType("integer");

                    b.Property<short>("RequireTime")
                        .HasColumnType("smallint");

                    b.HasKey("WorkId", "ExpirienceRequire");

                    b.ToTable("WorkPositions");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.BuisnessManagerStaff", b =>
                {
                    b.HasOne("TelegramFinancialGameBot.Model.ManagerStaff", "ManagerStaff")
                        .WithMany()
                        .HasForeignKey("ManagerStaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelegramFinancialGameBot.Model.UserBuisness", "UserBuisness")
                        .WithMany()
                        .HasForeignKey("UserBuisnessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagerStaff");

                    b.Navigation("UserBuisness");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.BuisnessRegionalDirector", b =>
                {
                    b.HasOne("TelegramFinancialGameBot.Model.RegionalDirector", "RegionalDirector")
                        .WithMany()
                        .HasForeignKey("RegionalDirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelegramFinancialGameBot.Model.UserBuisness", "UserBuisness")
                        .WithMany()
                        .HasForeignKey("UserBuisnessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegionalDirector");

                    b.Navigation("UserBuisness");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.KnowledgeForWork", b =>
                {
                    b.HasOne("TelegramFinancialGameBot.Model.Knowledge", "Knowledge")
                        .WithMany()
                        .HasForeignKey("KnowledgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelegramFinancialGameBot.Model.Work", null)
                        .WithMany("KnowledgeToHire")
                        .HasForeignKey("WorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Knowledge");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.SetupCharacterCards", b =>
                {
                    b.HasOne("TelegramFinancialGameBot.Model.SetupCharacter", "SetupCharacter")
                        .WithMany("Cards")
                        .HasForeignKey("SetupCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SetupCharacter");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.User", b =>
                {
                    b.HasOne("TelegramFinancialGameBot.Model.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelegramFinancialGameBot.Model.Dream", "Dream")
                        .WithMany()
                        .HasForeignKey("DreamId");

                    b.HasOne("TelegramFinancialGameBot.Model.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Dream");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.UserBuisness", b =>
                {
                    b.HasOne("TelegramFinancialGameBot.Model.Buisness", "Buisness")
                        .WithMany()
                        .HasForeignKey("BuisnessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelegramFinancialGameBot.Model.FinancialDirector", "FinancialDirector")
                        .WithMany()
                        .HasForeignKey("FinancialDirectorId");

                    b.HasOne("TelegramFinancialGameBot.Model.GeneralDirector", "GeneralDirector")
                        .WithMany()
                        .HasForeignKey("GeneralDirectorId");

                    b.HasOne("TelegramFinancialGameBot.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buisness");

                    b.Navigation("FinancialDirector");

                    b.Navigation("GeneralDirector");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.UserDreamExpectation", b =>
                {
                    b.HasOne("TelegramFinancialGameBot.Model.Dream", "Dream")
                        .WithMany()
                        .HasForeignKey("DreamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelegramFinancialGameBot.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dream");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.UserKnowledge", b =>
                {
                    b.HasOne("TelegramFinancialGameBot.Model.Knowledge", "Knowledge")
                        .WithMany()
                        .HasForeignKey("KnowledgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelegramFinancialGameBot.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Knowledge");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.UserProperty", b =>
                {
                    b.HasOne("TelegramFinancialGameBot.Model.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelegramFinancialGameBot.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.UserStaff", b =>
                {
                    b.HasOne("TelegramFinancialGameBot.Model.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelegramFinancialGameBot.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.UserWorkPosition", b =>
                {
                    b.HasOne("TelegramFinancialGameBot.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelegramFinancialGameBot.Model.WorkPosition", "WorkPosition")
                        .WithMany()
                        .HasForeignKey("WorkPositionWorkId", "WorkPositionExpirienceRequire")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("WorkPosition");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.VictoryConditions", b =>
                {
                    b.HasOne("TelegramFinancialGameBot.Model.Room", "Room")
                        .WithOne("VictoryConditions")
                        .HasForeignKey("TelegramFinancialGameBot.Model.VictoryConditions", "RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.WorkPosition", b =>
                {
                    b.HasOne("TelegramFinancialGameBot.Model.Work", "Work")
                        .WithMany()
                        .HasForeignKey("WorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Work");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.Room", b =>
                {
                    b.Navigation("VictoryConditions");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.SetupCharacter", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("TelegramFinancialGameBot.Model.Work", b =>
                {
                    b.Navigation("KnowledgeToHire");
                });
#pragma warning restore 612, 618
        }
    }
}
